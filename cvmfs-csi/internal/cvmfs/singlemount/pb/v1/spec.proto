// Copyright CERN.
//
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";
package cvmfs.csi.cern.ch.v1;

option go_package = "github.com/cvmfs-contrib/cvmfs-csi/internal/cvmfs/singlemount/pb/v1";

// Single provides a service for mounting CVMFS repositories as private mounts.
// See https://cvmfs.readthedocs.io/en/stable/cpt-configure.html#private-mount-points
// for more information on the topic. cvmfs-csi uses private mounts as an
// alternative to automounts, with the possibility of having per-volume configuration.
service Single {
  // Mounts a single CVMFS repository.
  rpc Mount (MountSingleRequest) returns (MountSingleResponse) {}
  // Unmount a single CVMFS repository.
  rpc Unmount (UnmountSingleRequest) returns (UnmountSingleResponse) {}
}

message MountSingleRequest {
  // Identifier used to share a CVMFS mount to multiple
  // targets as bindmounts. All Mount calls with the same
  // mount_id must have the same config, repository and extra_mount_flags
  // parameters, otherwise an error is returned.
  string mount_id = 1;

  // CVMFS client configuration to be passed to cvmfs2.
  string config = 2;

  // Source config from the specified file. Must be an absolute path
  // on the filesystem available to the singlemount container.
  string config_filepath = 3;

  // What CVMFS repository to mount using the provided configuration.
  string repository = 4;

  // Absolute path to an existing directory where to mount the repository.
  string target = 5;
}

message MountSingleResponse {}

message UnmountSingleRequest {
  // Absolute path to CVMFS mountpoint previously mounted by Single.Mount RPC.
  string mountpoint = 1;
}

message UnmountSingleResponse {}
