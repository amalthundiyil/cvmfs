// Copyright CERN.
//
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: spec.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MountSingleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier used to share a CVMFS mount to multiple
	// targets as bindmounts. All Mount calls with the same
	// mount_id must have the same config, repository and extra_mount_flags
	// parameters, otherwise an error is returned.
	MountId string `protobuf:"bytes,1,opt,name=mount_id,json=mountId,proto3" json:"mount_id,omitempty"`
	// CVMFS client configuration to be passed to cvmfs2.
	Config string `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	// Source config from the specified file. Must be an absolute path
	// on the filesystem available to the singlemount container.
	ConfigFilepath string `protobuf:"bytes,3,opt,name=config_filepath,json=configFilepath,proto3" json:"config_filepath,omitempty"`
	// What CVMFS repository to mount using the provided configuration.
	Repository string `protobuf:"bytes,4,opt,name=repository,proto3" json:"repository,omitempty"`
	// Absolute path to an existing directory where to mount the repository.
	Target string `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *MountSingleRequest) Reset() {
	*x = MountSingleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MountSingleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountSingleRequest) ProtoMessage() {}

func (x *MountSingleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountSingleRequest.ProtoReflect.Descriptor instead.
func (*MountSingleRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{0}
}

func (x *MountSingleRequest) GetMountId() string {
	if x != nil {
		return x.MountId
	}
	return ""
}

func (x *MountSingleRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *MountSingleRequest) GetConfigFilepath() string {
	if x != nil {
		return x.ConfigFilepath
	}
	return ""
}

func (x *MountSingleRequest) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

func (x *MountSingleRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type MountSingleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MountSingleResponse) Reset() {
	*x = MountSingleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MountSingleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountSingleResponse) ProtoMessage() {}

func (x *MountSingleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountSingleResponse.ProtoReflect.Descriptor instead.
func (*MountSingleResponse) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{1}
}

type UnmountSingleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Absolute path to CVMFS mountpoint previously mounted by Single.Mount RPC.
	Mountpoint string `protobuf:"bytes,1,opt,name=mountpoint,proto3" json:"mountpoint,omitempty"`
}

func (x *UnmountSingleRequest) Reset() {
	*x = UnmountSingleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnmountSingleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmountSingleRequest) ProtoMessage() {}

func (x *UnmountSingleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmountSingleRequest.ProtoReflect.Descriptor instead.
func (*UnmountSingleRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{2}
}

func (x *UnmountSingleRequest) GetMountpoint() string {
	if x != nil {
		return x.Mountpoint
	}
	return ""
}

type UnmountSingleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnmountSingleResponse) Reset() {
	*x = UnmountSingleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnmountSingleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmountSingleResponse) ProtoMessage() {}

func (x *UnmountSingleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmountSingleResponse.ProtoReflect.Descriptor instead.
func (*UnmountSingleResponse) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{3}
}

var File_spec_proto protoreflect.FileDescriptor

var file_spec_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x63, 0x76,
	0x6d, 0x66, 0x73, 0x2e, 0x63, 0x73, 0x69, 0x2e, 0x63, 0x65, 0x72, 0x6e, 0x2e, 0x63, 0x68, 0x2e,
	0x76, 0x31, 0x22, 0xa8, 0x01, 0x0a, 0x12, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c,
	0x65, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x15, 0x0a,
	0x13, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x0a, 0x14, 0x55, 0x6e, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x17, 0x0a, 0x15,
	0x55, 0x6e, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xce, 0x01, 0x0a, 0x06, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x12, 0x5e, 0x0a, 0x05, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x63, 0x76, 0x6d, 0x66,
	0x73, 0x2e, 0x63, 0x73, 0x69, 0x2e, 0x63, 0x65, 0x72, 0x6e, 0x2e, 0x63, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x76, 0x6d, 0x66, 0x73, 0x2e, 0x63, 0x73, 0x69, 0x2e,
	0x63, 0x65, 0x72, 0x6e, 0x2e, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x64, 0x0a, 0x07, 0x55, 0x6e, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x2e, 0x63, 0x76,
	0x6d, 0x66, 0x73, 0x2e, 0x63, 0x73, 0x69, 0x2e, 0x63, 0x65, 0x72, 0x6e, 0x2e, 0x63, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x6e, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x76, 0x6d, 0x66, 0x73, 0x2e,
	0x63, 0x73, 0x69, 0x2e, 0x63, 0x65, 0x72, 0x6e, 0x2e, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x6e, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x65, 0x72, 0x6e, 0x6f, 0x70, 0x73, 0x2f, 0x63, 0x76, 0x6d,
	0x66, 0x73, 0x2d, 0x63, 0x73, 0x69, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f,
	0x63, 0x76, 0x6d, 0x66, 0x73, 0x2f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x2f, 0x70, 0x62, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spec_proto_rawDescOnce sync.Once
	file_spec_proto_rawDescData = file_spec_proto_rawDesc
)

func file_spec_proto_rawDescGZIP() []byte {
	file_spec_proto_rawDescOnce.Do(func() {
		file_spec_proto_rawDescData = protoimpl.X.CompressGZIP(file_spec_proto_rawDescData)
	})
	return file_spec_proto_rawDescData
}

var file_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_spec_proto_goTypes = []interface{}{
	(*MountSingleRequest)(nil),    // 0: cvmfs.csi.cern.ch.v1.MountSingleRequest
	(*MountSingleResponse)(nil),   // 1: cvmfs.csi.cern.ch.v1.MountSingleResponse
	(*UnmountSingleRequest)(nil),  // 2: cvmfs.csi.cern.ch.v1.UnmountSingleRequest
	(*UnmountSingleResponse)(nil), // 3: cvmfs.csi.cern.ch.v1.UnmountSingleResponse
}
var file_spec_proto_depIdxs = []int32{
	0, // 0: cvmfs.csi.cern.ch.v1.Single.Mount:input_type -> cvmfs.csi.cern.ch.v1.MountSingleRequest
	2, // 1: cvmfs.csi.cern.ch.v1.Single.Unmount:input_type -> cvmfs.csi.cern.ch.v1.UnmountSingleRequest
	1, // 2: cvmfs.csi.cern.ch.v1.Single.Mount:output_type -> cvmfs.csi.cern.ch.v1.MountSingleResponse
	3, // 3: cvmfs.csi.cern.ch.v1.Single.Unmount:output_type -> cvmfs.csi.cern.ch.v1.UnmountSingleResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_spec_proto_init() }
func file_spec_proto_init() {
	if File_spec_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spec_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MountSingleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MountSingleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnmountSingleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnmountSingleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spec_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spec_proto_goTypes,
		DependencyIndexes: file_spec_proto_depIdxs,
		MessageInfos:      file_spec_proto_msgTypes,
	}.Build()
	File_spec_proto = out.File
	file_spec_proto_rawDesc = nil
	file_spec_proto_goTypes = nil
	file_spec_proto_depIdxs = nil
}
